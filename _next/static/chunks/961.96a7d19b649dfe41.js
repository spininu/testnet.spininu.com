"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[961],{10961:function(e,t,r){r.r(t),r.d(t,{EthereumPrivateKeyProvider:function(){return ie},WalletConnectProvider:function(){return G}});var a=r(4942),i=r(95707),s=r(51086),n=r(41436),o=r(68531),c=r(79826),h=r(66052),d=r(51091),p=r(53934),u=r(2832),g=r.n(u),m=r(44431),y=r.n(m),l=r(89305),f=r(36669).Buffer;function P(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function w(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?P(Object(r),!0).forEach((function(t){(0,a.Z)(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):P(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function v(e){return 42===e.length}function E(e){let{getAccounts:t,getPrivateKey:r,processDecryptMessage:a,processEncryptionPublicKey:i,processEthSignMessage:n,processPersonalMessage:o,processTransaction:h,processSignTransaction:d,processTypedMessage:p,processTypedMessageV3:u,processTypedMessageV4:g}=e;if(!t)throw new Error("opts.getAccounts is required");async function m(e,r){if("string"===typeof e&&e.length>0){const a=(await t(r)).map((e=>e.toLowerCase())),i=e.toLowerCase();if(a.includes(i))return i}throw c.ethErrors.rpc.invalidParams({message:"Invalid parameters: must provide an Ethereum address."})}return(0,s.v0)({eth_accounts:(0,s.Pk)((async function(e,r){r.result=await t(e)})),eth_private_key:(0,s.Pk)((async function(e,t){if(!r)throw c.ethErrors.rpc.methodNotSupported();t.result=r(e)})),eth_coinbase:(0,s.Pk)((async function(e,r){const a=await t(e);r.result=a[0]||null})),eth_sendTransaction:(0,s.Pk)((async function(e,t){if(!h)throw c.ethErrors.rpc.methodNotSupported();const r=e.params[0]||{from:""};r.from=await m(r.from,e),t.result=await h(r,e)})),eth_signTransaction:(0,s.Pk)((async function(e,t){if(!d)throw c.ethErrors.rpc.methodNotSupported();const r=e.params[0]||{from:""};r.from=await m(r.from,e),t.result=await d(r,e)})),eth_sign:(0,s.Pk)((async function(e,t){if(!n)throw c.ethErrors.rpc.methodNotSupported();const r=await m(e.params[0],e),a=e.params[1],i=w(w({},e.params[2]||{}),{},{from:r,data:a});t.result=await n(i,e)})),eth_signTypedData:(0,s.Pk)((async function(e,t){if(!p)throw c.ethErrors.rpc.methodNotSupported();const r=e.params[0],a=await m(e.params[1],e),i=w(w({},e.params[2]||{}),{},{from:a,data:r});t.result=await p(i,e,"V1")})),eth_signTypedData_v3:(0,s.Pk)((async function(e,t){if(!u)throw c.ethErrors.rpc.methodNotSupported();const r=await m(e.params[0],e),a={data:e.params[1],from:r,version:"V3"};t.result=await u(a,e,"V3")})),eth_signTypedData_v4:(0,s.Pk)((async function(e,t){if(!g)throw c.ethErrors.rpc.methodNotSupported();const r=await m(e.params[0],e),a={data:e.params[1],from:r,version:"V4"};t.result=await g(a,e,"V4")})),personal_sign:(0,s.Pk)((async function(e,t){if(!o)throw c.ethErrors.rpc.methodNotSupported();const r=e.params[0],a=e.params[1],i=e.params[2]||{};let s,n;if(v(r)&&!v(a)){let e="The eth_personalSign method requires params ordered ";e+="[message, address]. This was previously handled incorrectly, ",e+="and has been corrected automatically. ",e+="Please switch this param order for smooth behavior in the future.",t.warning=e,s=r,n=a}else n=r,s=a;s=await m(s,e);const h=w(w({},i),{},{from:s,data:n});t.result=await o(h,e)})),eth_getEncryptionPublicKey:(0,s.Pk)((async function(e,t){if(!i)throw c.ethErrors.rpc.methodNotSupported();const r=await m(e.params[0],e);t.result=await i(r,e)})),eth_decrypt:(0,s.Pk)((async function(e,t){if(!a)throw c.ethErrors.rpc.methodNotSupported();const r=e.params[0],i=await m(e.params[1],e),s=w(w({},e.params[2]||{}),{},{from:i,data:r});t.result=a(s,e)}))})}function x(e){const{getAccounts:t,getPrivateKey:r,processTransaction:a,processSignTransaction:i,processEthSignMessage:n,processTypedMessage:o,processTypedMessageV3:c,processTypedMessageV4:h,processPersonalMessage:d,processEncryptionPublicKey:p,processDecryptMessage:u}=e;return(0,s.UZ)([(0,s.v0)({eth_syncing:!1}),E({getAccounts:t,getPrivateKey:r,processTransaction:a,processEthSignMessage:n,processSignTransaction:i,processTypedMessage:o,processTypedMessageV3:c,processTypedMessageV4:h,processPersonalMessage:d,processEncryptionPublicKey:p,processDecryptMessage:u})])}function b(e){return(t,r,a,i)=>"eth_chainId"===t.method?(r.result=e,i()):a()}function O(e){return(t,r,a,i)=>"eth_provider_config"===t.method?(r.result=e,i()):a()}function C(e){const{chainId:t,rpcTarget:r}=e,a=(0,i.v$)({rpcTarget:r});return{networkMiddleware:(0,s.UZ)([b(t),O(e),a]),fetchMiddleware:a}}function k(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function M(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?k(Object(r),!0).forEach((function(t){(0,a.Z)(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):k(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}class G extends o.Zk{constructor(e){let{config:t,state:r,connector:i}=e;super({config:{chainConfig:M(M({},t.chainConfig),{},{chainNamespace:n.EN.EIP155}),skipLookupNetwork:!!t.skipLookupNetwork},state:M(M({},r||{}),{},{chainId:"loading",accounts:[]})}),(0,a.Z)(this,"connector",null),this.connector=i||null}async enable(){if(!this.connector)throw c.ethErrors.provider.custom({message:"Connector is not initialized, pass wallet connect connector in constructor",code:4902});return await this.setupProvider(this.connector),this._providerEngineProxy.request({method:"eth_accounts"})}async setupProvider(e){this.onConnectorStateUpdate(e),await this.setupEngine(e)}async switchChain(e){let{chainId:t,addChain:r=!0,lookup:a=!0}=e;if(!this.connector)throw c.ethErrors.provider.custom({message:"Connector is not initialized, pass wallet connect connector in constructor",code:4902});const i=this.getChainConfig(t);this.update({chainId:"loading"});const{rpcTarget:s,displayName:o}=i;if(r)try{await this.connector.sendCustomRequest({method:"wallet_addEthereumChain",params:[{chainId:t,chainName:o,rpcUrls:[s]}]})}catch(h){n.cM.error(h)}try{await this.connector.sendCustomRequest({method:"wallet_switchEthereumChain",params:[{chainId:t}]})}catch(h){if(n.cM.error(h),"JSON RPC response format is invalid"!==h.message)throw h}this.configure({chainConfig:i}),a&&await this.lookupNetwork(this.connector)}async addChain(e){if(!this.connector)throw n.Ty.notReady("Wallet adapter is not ready yet");const{rpcTarget:t,displayName:r}=e;try{await this.connector.sendCustomRequest({method:"wallet_addEthereumChain",params:[{chainId:e.chainId,chainName:r,rpcUrls:[t]}]}),super.addChain(e)}catch(a){throw n.cM.error(a),a}}async lookupNetwork(e){if(!e.connected)throw n.RM.notConnectedError("Wallet connect connector is not connected");if(!this.provider)throw c.ethErrors.provider.custom({message:"Provider is not initialized",code:4902});const{chainId:t}=this.config.chainConfig,r=(0,n.H2)(e.chainId.toString())?e.chainId:"0x".concat(e.chainId.toString(16));if(t!==r)throw n.Ty.rpcConnectionError("Invalid network, net_version is: ".concat(r,", expected: ").concat(t));return this.provider.emit("connect",{chainId:t}),this.provider.emit("chainChanged",this.state.chainId),r}async setupEngine(e){const t=function(e){let{connector:t}=e;return{getPrivateKey:async()=>{throw c.ethErrors.rpc.methodNotSupported()},getAccounts:async e=>{const{accounts:r}=t;if(r&&r.length)return r;throw new Error("Failed to get accounts")},processTransaction:async(e,r)=>await t.sendTransaction(e),processSignTransaction:async(e,r)=>await t.signTransaction(e),processEthSignMessage:async(e,r)=>await t.signMessage([e.from,e.data]),processPersonalMessage:async(e,r)=>await t.signPersonalMessage([e.data,e.from]),processTypedMessage:async(e,r)=>await t.signTypedData([e.from,e.data]),processTypedMessageV3:async e=>await t.signTypedData([e.from,e.data]),processTypedMessageV4:async e=>await t.signTypedData([e.from,e.data]),processEncryptionPublicKey:async e=>{throw c.ethErrors.rpc.methodNotSupported()},processDecryptMessage:e=>{throw c.ethErrors.rpc.methodNotSupported()}}}({connector:e});this.update({accounts:e.accounts||[]});const r=x(t),a=new s.eI,{networkMiddleware:n}=C(this.config.chainConfig);a.push(r),a.push(n);const o=(0,i.Xj)(a);this.updateProviderEngineProxy(o),this.config.skipLookupNetwork||await this.lookupNetwork(e)}async onConnectorStateUpdate(e){e.on("session_update",(async(t,r)=>{if(!this.provider)throw n.RM.notConnectedError("Wallet connect connector is not connected");if(t)return void this.provider.emit("error",t);const{accounts:a,chainId:i,rpcUrl:s}=r.params[0];null!==a&&void 0!==a&&a.length&&this.state.accounts[0]!==a[0]&&(this.update({accounts:a}),this.provider.emit("accountsChanged",a));const o="0x".concat(i.toString(16));if(i&&this.state.chainId!==o){const t=(0,n.h2)(n.EN.EIP155,i)||{};this.configure({chainConfig:M(M({},t),{},{chainId:o,rpcTarget:s,chainNamespace:n.EN.EIP155})}),await this.setupEngine(e)}}))}}async function I(e,t,r){const a=await r.formatTransaction(e),i=await r.getCommonConfiguration();return h.TransactionFactory.fromTxData(a,{common:i}).sign(f.from(t,"hex")).serialize()}(0,a.Z)(G,"getProviderInstance",(async e=>{const t=new G({config:{chainConfig:e.chainConfig,skipLookupNetwork:e.skipLookupNetwork}});return await t.setupProvider(e.connector),t}));const T=new(y())("1e18"),_=new(y())("1e9"),N=new(y())("1"),D={hex:e=>"string"===typeof e?new(y())((0,p.stripHexPrefix)(e),16):new(y())(e,16),dec:e=>new(y())(e,10)},F={WEI:e=>e.div(T),GWEI:e=>e.div(_),ETH:e=>e.div(N)},j={WEI:e=>e.times(T).dp(0,y().ROUND_HALF_UP),GWEI:e=>e.times(_).dp(9,y().ROUND_HALF_UP),ETH:e=>e.times(N).dp(9,y().ROUND_HALF_UP)},S={hex:e=>e.toString(16),dec:e=>new(y())(e).toString(10)},B=(e,t)=>{let{fromNumericBase:r="hex",toNumericBase:a,fromDenomination:i,toDenomination:s,numberOfDecimals:n}=t;return(e=>{const{value:t,fromNumericBase:r,fromDenomination:a,toNumericBase:i,toDenomination:s,numberOfDecimals:n}=e;let o=D[r](t);return a&&(o=F[a](o)),s&&(o=j[s](o)),n&&(o=o.dp(n,y().ROUND_HALF_DOWN)),i&&(o=S[i](o)),o})({fromNumericBase:r,toNumericBase:a,fromDenomination:i,toDenomination:s,numberOfDecimals:n,value:e||"0"})};function K(e){return B(e,{fromNumericBase:"dec",toNumericBase:"hex",fromDenomination:"GWEI",toDenomination:"WEI"})}function H(e){return B(e,{fromNumericBase:"hex",toNumericBase:"dec",fromDenomination:"WEI",toDenomination:"GWEI"})}function U(e){return(0,p.addHexPrefix)(e.toString(16))}function L(e){return m.BigNumber.isBigNumber(e)?e:new m.BigNumber((0,p.stripHexPrefix)(e),16)}const V="0x0",q="0x2",A="sentEther",z="contractInteraction",Z="contractDeployment",W="fee-market",R="legacy",J="eth_gasPrice";function X(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function $(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?X(Object(r),!0).forEach((function(t){(0,a.Z)(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):X(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function Q(e){return H(K(e))}function Y(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function ee(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?Y(Object(r),!0).forEach((function(t){(0,a.Z)(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):Y(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}class te{constructor(e){let{getProviderEngineProxy:t}=e;(0,a.Z)(this,"chainConfig",null),(0,a.Z)(this,"getProviderEngineProxy",void 0),(0,a.Z)(this,"isEIP1559Compatible",!1),this.getProviderEngineProxy=t}get providerProxy(){return this.getProviderEngineProxy()}async init(){this.chainConfig=await this.providerProxy.request({method:"eth_provider_config",params:[]}),this.isEIP1559Compatible=await this.getEIP1559Compatibility()}async getCommonConfiguration(){if(!this.chainConfig)throw new Error("Chain config not initialized");const{displayName:e,chainId:t}=this.chainConfig,r=this.isEIP1559Compatible?u.Hardfork.London:u.Hardfork.Berlin,a={name:e,chainId:"loading"===t?0:Number.parseInt(t,16),networkId:"loading"===t?0:Number.parseInt(t,16),defaultHardfork:r};return g().custom(a)}async formatTransaction(e){if(!this.chainConfig)throw new Error("Chain config not initialized");const t=ee({},e);if(void 0===t.nonce&&(t.nonce=await this.providerProxy.request({method:"eth_getTransactionCount",params:[e.from,"latest"]})),!this.isEIP1559Compatible&&t.gasPrice){if(t.maxFeePerGas&&delete t.maxFeePerGas,t.maxPriorityFeePerGas&&delete t.maxPriorityFeePerGas,t.gas)t.gasLimit=t.gas;else{const e=await this.getDefaultGasLimit(t);e&&(t.gasLimit=e)}return t}if(t.gas)t.gasLimit=t.gas;else{const e=await this.getDefaultGasLimit(t);e&&(t.gasLimit=e)}const{gasPrice:r,maxFeePerGas:a,maxPriorityFeePerGas:i}=await this.getDefaultGasFees(t);var s,n;return this.isEIP1559Compatible?(!t.gasPrice||t.maxFeePerGas||t.maxPriorityFeePerGas?(a&&!t.maxFeePerGas&&(t.maxFeePerGas=a),i&&!t.maxPriorityFeePerGas&&(t.maxPriorityFeePerGas=i),r&&!t.maxFeePerGas&&(t.maxFeePerGas=r),t.maxFeePerGas&&!t.maxPriorityFeePerGas&&(t.maxPriorityFeePerGas=t.maxFeePerGas)):(t.maxFeePerGas=t.gasPrice,t.maxPriorityFeePerGas=(s="string"===typeof i?(0,p.stripHexPrefix)(i):i,n="string"===typeof t.gasPrice?(0,p.stripHexPrefix)(t.gasPrice):t.gasPrice,null!==s&&void 0!==s&&null!==n&&void 0!==n&&new m.BigNumber(s,10).lt(n,10)?i:t.gasPrice)),delete t.gasPrice):(delete t.maxPriorityFeePerGas,delete t.maxFeePerGas),!r||t.gasPrice||t.maxPriorityFeePerGas||t.maxFeePerGas||(t.gasPrice=r),t.type=this.isEIP1559Compatible?q:V,t.chainId=this.chainConfig.chainId,t}async fetchEthGasPriceEstimate(){return{gasPrice:H(await this.providerProxy.request({method:"eth_gasPrice",params:[]})).toString()}}async getEIP1559Compatibility(){const e=await this.providerProxy.request({method:"eth_getBlockByNumber",params:["latest",!1]});return!!(e&&void 0!==e.baseFeePerGas)}async fetchGasFeeEstimateData(){if(!this.chainConfig)throw new Error("Chain config not initialized");const e="0x1"===this.chainConfig.chainId,t=Number.parseInt(this.chainConfig.chainId,16);let r;try{if(this.isEIP1559Compatible){r={gasFeeEstimates:await async function(e){const t=await(0,l.U2)(e);return $($({},t),{},{estimatedBaseFee:Q(t.estimatedBaseFee),low:$($({},t.low),{},{suggestedMaxPriorityFeePerGas:Q(t.low.suggestedMaxPriorityFeePerGas),suggestedMaxFeePerGas:Q(t.low.suggestedMaxFeePerGas)}),medium:$($({},t.medium),{},{suggestedMaxPriorityFeePerGas:Q(t.medium.suggestedMaxPriorityFeePerGas),suggestedMaxFeePerGas:Q(t.medium.suggestedMaxFeePerGas)}),high:$($({},t.high),{},{suggestedMaxPriorityFeePerGas:Q(t.high.suggestedMaxPriorityFeePerGas),suggestedMaxFeePerGas:Q(t.high.suggestedMaxFeePerGas)})})}("https://gas-api.metaswap.codefi.network/networks/<chain_id>/suggestedGasFees".replace("<chain_id>","".concat(t))),gasEstimateType:W}}else{if(!e)throw new Error("Main gas fee/price estimation failed. Use fallback");r={gasFeeEstimates:await async function(e){const t=await(0,l.U2)(e,{referrer:e,referrerPolicy:"no-referrer-when-downgrade",method:"GET",mode:"cors"});return{low:t.SafeGasPrice,medium:t.ProposeGasPrice,high:t.FastGasPrice}}("https://gas-api.metaswap.codefi.network/networks/<chain_id>/gasPrices".replace("<chain_id>","".concat(t))),gasEstimateType:R}}}catch(a){try{r={gasFeeEstimates:await this.fetchEthGasPriceEstimate(),gasEstimateType:J}}catch(i){throw new Error("Gas fee/price estimation failed. Message: ".concat(i.message))}}return r}async getDefaultGasFees(e){if(!this.isEIP1559Compatible&&e.gasPrice||this.isEIP1559Compatible&&e.maxFeePerGas&&e.maxPriorityFeePerGas)return{};try{const{gasFeeEstimates:e,gasEstimateType:t}=await this.fetchGasFeeEstimateData();if(this.isEIP1559Compatible&&t===W){const{medium:{suggestedMaxPriorityFeePerGas:t,suggestedMaxFeePerGas:r}={}}=e;if(t&&r)return{maxFeePerGas:(0,p.addHexPrefix)(K(r)),maxPriorityFeePerGas:(0,p.addHexPrefix)(K(t))}}else{if(t===R)return{gasPrice:K(e.medium)};if(t===J)return{gasPrice:(0,p.addHexPrefix)(K(e.gasPrice))}}}catch(r){n.cM.error(r)}const{gasPrice:t}=await this.fetchEthGasPriceEstimate();return{gasPrice:(0,p.addHexPrefix)(K(t))}}async estimateTxGas(e){const t=ee({},e);delete t.gasPrice,delete t.maxFeePerGas,delete t.maxPriorityFeePerGas;return await this.providerProxy.request({method:"eth_estimateGas",params:[t]})}async analyzeGasUsage(e){const t=await this.providerProxy.request({method:"eth_getBlockByNumber",params:["latest",!1]});let r=U(function(e,t,r){const a=new m.BigNumber(t),i=new m.BigNumber(r);return e.multipliedBy(a).dividedBy(i)}(L(t.gasLimit),19,20));try{r=await this.estimateTxGas(e)}catch(a){n.cM.warn(a)}return{blockGasLimit:t.gasLimit,estimatedGasHex:r}}addGasBuffer(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1.5;const a=L(e),i=L(t).multipliedBy(.9).dp(0,1),s=a.multipliedBy(r).dp(0,1);return a.gt(i)?U(a):s.lt(i)?U(s):U(i)}async determineTransactionCategory(e){const{data:t,to:r}=e;let a,i="";if(t&&!r)a=Z;else{try{i=await this.providerProxy.request({method:"eth_getCode",params:[r,"latest"]})}catch(s){n.cM.warn(s)}a=!i||"0x"===i||"0x0"===i?A:z}return{transactionCategory:a,code:i}}async getDefaultGasLimit(e){const{transactionCategory:t}=await this.determineTransactionCategory(ee({},e));if(e.gas)return e.gas;if(e.to&&t===A){if(e.data)throw Error("TxGasUtil - Trying to call a function on a non-contract address");const t=21e3;return(0,p.addHexPrefix)(t.toString(16))}const{blockGasLimit:r,estimatedGasHex:a}=await this.analyzeGasUsage(e);return this.addGasBuffer((0,p.addHexPrefix)(a),r)}}function re(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function ae(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?re(Object(r),!0).forEach((function(t){(0,a.Z)(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):re(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}class ie extends o.Zk{constructor(e){let{config:t,state:r}=e;super({config:{chainConfig:ae(ae({},t.chainConfig),{},{chainNamespace:n.EN.EIP155})},state:r})}async enable(){if(!this.state.privateKey)throw c.ethErrors.provider.custom({message:"Private key is not found in state, plz pass it in constructor state param",code:4902});return await this.setupProvider(this.state.privateKey),this._providerEngineProxy.request({method:"eth_accounts"})}async setupProvider(e){const t=new te({getProviderEngineProxy:this.getProviderEngineProxy.bind(this)}),r=function(e){let{txFormatter:t,privKey:r,getProviderEngineProxy:a}=e;return{getAccounts:async e=>["0x".concat((0,p.privateToAddress)(f.from(r,"hex")).toString("hex"))],getPrivateKey:async e=>r,processTransaction:async(e,i)=>{const s=a();if(!s)throw c.ethErrors.provider.custom({message:"Provider is not initialized",code:4902});const n=await I(e,r,t);return await s.request({method:"eth_sendRawTransaction",params:["0x".concat(n.toString("hex"))]})},processSignTransaction:async(e,i)=>{if(!a())throw c.ethErrors.provider.custom({message:"Provider is not initialized",code:4902});const s=await I(e,r,t);return"0x".concat(s.toString("hex"))},processEthSignMessage:async(e,t)=>(0,i.l)(r,e.data),processPersonalMessage:async(e,t)=>{const a=f.from(r,"hex");return(0,d.personalSign)({privateKey:a,data:e.data})},processTypedMessage:async(e,t)=>{n.cM.debug("processTypedMessage",e);const a=f.from(r,"hex");return(0,d.signTypedData)({privateKey:a,data:e.data,version:d.SignTypedDataVersion.V1})},processTypedMessageV3:async(e,t)=>{n.cM.debug("processTypedMessageV3",e);const a=f.from(r,"hex");return(0,d.signTypedData)({privateKey:a,data:e.data,version:d.SignTypedDataVersion.V3})},processTypedMessageV4:async(e,t)=>{n.cM.debug("processTypedMessageV4",e);const a=f.from(r,"hex");return(0,d.signTypedData)({privateKey:a,data:e.data,version:d.SignTypedDataVersion.V4})},processEncryptionPublicKey:async(e,t)=>(n.cM.info("processEncryptionPublicKey",e),(0,d.getEncryptionPublicKey)(r)),processDecryptMessage:(e,t)=>{n.cM.info("processDecryptMessage",e);const a=(0,p.stripHexPrefix)(e.data),i=f.from(a,"hex");return(0,d.decrypt)({encryptedData:JSON.parse(i.toString("utf8")),privateKey:r})}}}({txFormatter:t,privKey:e,getProviderEngineProxy:this.getProviderEngineProxy.bind(this)}),a=x(r),o=this.getChainSwitchMiddleware(),h=new s.eI,{networkMiddleware:u}=C(this.config.chainConfig);h.push(a),h.push(o),h.push(this.getAccountMiddleware()),h.push(u);const g=(0,i.Xj)(h);this.updateProviderEngineProxy(g),await t.init(),await this.lookupNetwork()}async updateAccount(e){if(!this._providerEngineProxy)throw c.ethErrors.provider.custom({message:"Provider is not initialized",code:4902});await this._providerEngineProxy.request({method:"eth_private_key"})!==e.privateKey&&(await this.setupProvider(e.privateKey),this._providerEngineProxy.emit("accountsChanged",{accounts:await this._providerEngineProxy.request({method:"eth_accounts"})}))}async switchChain(e){if(!this._providerEngineProxy)throw c.ethErrors.provider.custom({message:"Provider is not initialized",code:4902});const t=this.getChainConfig(e.chainId);this.update({chainId:"loading"}),this.configure({chainConfig:t});const r=await this._providerEngineProxy.request({method:"eth_private_key"});await this.setupProvider(r)}async lookupNetwork(){if(!this._providerEngineProxy)throw c.ethErrors.provider.custom({message:"Provider is not initialized",code:4902});const{chainId:e}=this.config.chainConfig;if(!e)throw c.ethErrors.rpc.invalidParams("chainId is required while lookupNetwork");const t=await this._providerEngineProxy.request({method:"net_version",params:[]});if(parseInt(e,16)!==parseInt(t,10))throw c.ethErrors.provider.chainDisconnected("Invalid network, net_version is: ".concat(t));return this.state.chainId!==e&&(this._providerEngineProxy.emit("chainChanged",e),this._providerEngineProxy.emit("connect",{chainId:e})),this.update({chainId:e}),t}getChainSwitchMiddleware(){return function(e){let{addChain:t,switchChain:r}=e;return(0,s.v0)({wallet_addEthereumChain:(0,s.Pk)((async function(e,r){var a;const i=null!==(a=e.params)&&void 0!==a&&a.length?e.params[0]:void 0;if(!i)throw c.ethErrors.rpc.invalidParams("Missing chain params");if(!i.chainId)throw c.ethErrors.rpc.invalidParams("Missing chainId in chainParams");if(!i.rpcUrls||0===i.rpcUrls.length)throw c.ethErrors.rpc.invalidParams("Missing rpcUrls in chainParams");if(!i.nativeCurrency)throw c.ethErrors.rpc.invalidParams("Missing nativeCurrency in chainParams");r.result=await t(i)})),wallet_switchEthereumChain:(0,s.Pk)((async function(e,t){var a;const i=null!==(a=e.params)&&void 0!==a&&a.length?e.params[0]:void 0;if(!i)throw c.ethErrors.rpc.invalidParams("Missing chainId");t.result=await r(i)}))})}({addChain:async e=>{const{chainId:t,chainName:r,rpcUrls:a,blockExplorerUrls:i,nativeCurrency:s}=e;this.addChain({chainNamespace:"eip155",chainId:t,ticker:(null===s||void 0===s?void 0:s.symbol)||"ETH",tickerName:(null===s||void 0===s?void 0:s.name)||"Ether",displayName:r,rpcTarget:a[0],blockExplorer:(null===i||void 0===i?void 0:i[0])||""})},switchChain:async e=>{const{chainId:t}=e;await this.switchChain({chainId:t})}})}getAccountMiddleware(){return function(e){let{updatePrivatekey:t}=e;return(0,s.v0)({wallet_updateAccount:(0,s.Pk)((async function(e,r){var a;const i=null!==(a=e.params)&&void 0!==a&&a.length?e.params[0]:void 0;if(null===i||void 0===i||!i.privateKey)throw c.ethErrors.rpc.invalidParams("Missing privateKey");r.result=await t(i)}))})}({updatePrivatekey:async e=>{const{privateKey:t}=e;await this.updateAccount({privateKey:t})}})}}(0,a.Z)(ie,"getProviderInstance",(async e=>{const t=new ie({config:{chainConfig:e.chainConfig}});return await t.setupProvider(e.privKey),t}))}}]);